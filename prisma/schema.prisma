generator kysely {
    provider = "prisma-kysely"
    output = "./keysley"
    fileName = "types.ts"
    enumFileName = "enums.ts"
}

generator zod-prisma-types {
  provider                         = "zod-prisma-types"
  output                           = "./zod" // default is ./generated/zod
  useMultipleFiles                 = true // default is false
  writeBarrelFiles                 = true // default is true
  createInputTypes                 = false // default is true
  createModelTypes                 = true // default is true
  addInputTypeValidation           = false // default is true
  addIncludeType                   = false // default is true
  addSelectType                    = false // default is true
  validateWhereUniqueInput         = false // default is false
  createOptionalDefaultValuesTypes = true // default is false
  createRelationValuesTypes        = false // default is false
  createPartialTypes               = false // default is false
  useDefaultValidators             = true // default is true
  coerceDate                       = true // default is true
  writeNullishInModelTypes         = false // default is false
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id    Int     @id @db.UnsignedInt() @default(autoincrement()) 
  /// @zod.string.max(80)
  username String @db.VarChar(80) @unique
  /// @zod.string.max(126)
  fullname  String @db.VarChar(126)
  /// @zod.string.max(256)
  email String?  @db.VarChar(256) @unique
  posts Post[]
}

model Post {
  id    BigInt     @id @db.UnsignedBigInt() @default(autoincrement())
  /// @zod.string.max(126)
  title  String @db.VarChar(126)
  content String
  createdAt DateTime @map("created_at") @default(now())
  updatedAt DateTime @map("updated_at") @updatedAt
  createdById    Int     @db.UnsignedInt()
  createdBy User  @relation(fields: [createdById], references: [id])
  /// @zod.string.max(50)
  timezone String @db.VarChar(50)
}
